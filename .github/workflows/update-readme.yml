name: Update README (cards + repo list)

on:
  workflow_dispatch:
  schedule:
    - cron: "17 */12 * * *"   # every 12 hours

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sections and update README
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            const USERNAME = 'vaibhavjais2503';
            const MAX_CARDS = 8;                // how many repo cards to show
            const EXCLUDE_FORKS = true;

            // Fetch all public repos
            let page = 1, perPage = 100, repos = [];
            while (true) {
              const { data } = await github.request('GET /users/{username}/repos', {
                username: USERNAME, per_page: perPage, page
              });
              if (!data.length) break;
              repos = repos.concat(data);
              page++;
            }

            // Filter + sort
            repos = repos
              .filter(r => (!EXCLUDE_FORKS || !r.fork) && !r.archived && !r.private && r.owner.login === USERNAME)
              .sort((a,b) =>
                b.stargazers_count - a.stargazers_count ||
                new Date(b.pushed_at) - new Date(a.pushed_at)
              );

            // ---------- Build Repo List ----------
            const repoLines = repos.map(r => {
              const desc = (r.description || '_No description_').replace(/\r?\n/g, ' ');
              const stars = `★ ${r.stargazers_count}`;
              const upd = r.pushed_at?.slice(0,10) || r.updated_at?.slice(0,10);
              return `- [${r.name}](${r.html_url}) — ${desc}  • ${stars} • updated ${upd}`;
            }).join('\n');

            // ---------- Build Dark Cards (top N) ----------
            const top = repos.slice(0, MAX_CARDS);
            const rows = [];
            for (let i = 0; i < top.length; i += 2) {
              const pair = top.slice(i, i+2).map(r => (
                `<a href="${r.html_url}">
                   <img src="https://github-readme-stats.vercel.app/api/pin/?username=${USERNAME}&repo=${r.name}&theme=dark&hide_border=true" />
                 </a>`
              )).join('\n');
              rows.push(`<p align="center">\n${pair}\n</p>`);
            }
            const cardsHtml = rows.join('\n');

            // ---------- Replace blocks in README ----------
            const readmePath = 'README.md';
            let readme = fs.readFileSync(readmePath, 'utf8');

            function replaceBlock(start, end, content) {
              const s = `<!--${start}:START-->`;
              const e = `<!--${end}:END-->`;
              const re = new RegExp(`${s}[\\s\\S]*?${e}`);
              if (!re.test(readme)) {
                core.setFailed(`Markers ${s} and ${e} not found in README.md`);
                return;
              }
              readme = readme.replace(re, `${s}\n${content}\n${e}`);
            }

            replaceBlock('AUTO-REPO-LIST', 'AUTO-REPO-LIST', repoLines || '<i>No public repositories found.</i>');
            replaceBlock('AUTO-PIN-CARDS', 'AUTO-PIN-CARDS', cardsHtml || '<i>No repositories to show.</i>');

            fs.writeFileSync(readmePath, readme);
      - name: Commit & push if changed
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            git config user.name  "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add README.md
            git commit -m "chore: auto-update README (cards + repo list)"
            git push
          fi
